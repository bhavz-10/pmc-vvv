pmc_vvv=File.realdirpath( '..' );
pmc_src=File.realdirpath( 'src', '..' );
pmc_provision_dir=File.realdirpath( 'provision', '..' );

require File.join( pmc_vvv,'lib','functions.rb' )

# custom mapping for pmc specific improvement
config.vm.synced_folder File.join(pmc_vvv, 'wp-core'), '/srv/wp-core', owner: 'vagrant', group: 'www-data', mount_options: ['dmode=775', 'fmode=774'], automount: true, SharedFoldersEnableSymlinksCreate: true
config.vm.synced_folder File.join(pmc_vvv, 'wp-themes'), '/srv/wp-themes', owner: 'vagrant', group: 'www-data', mount_options: ['dmode=775', 'fmode=774'], automount: true, SharedFoldersEnableSymlinksCreate: true
config.vm.synced_folder pmc_vvv, '/srv/pmc-vvv', owner: 'vagrant', group: 'www-data', mount_options: ['dmode=775', 'fmode=774'], automount: true, SharedFoldersEnableSymlinksCreate: true

# we want to override some default from VVV to settings we know work properly from pmc-qs7
config.vm.provider :virtualbox do |v|

	# rename the VM since we are customized the setting to PMC specificiation
	v.name = "pmc-vvv_" + (Digest::SHA256.hexdigest pmc_vvv)[0..10]

	# Allow the VM to utilize up to 1/2 of the host cpu cores
	v.cpus = detect_max_cpus 2, 0.5

	# Allow the VM to utilize up to 3/4 of the host system memory
	v.memory = detect_max_mem 4096, 0.75

  # Only allow the VM to use up-to 50% of the host system cpu
  # Windows OS, the server may hang if cpu allow to reach 100%
	v.customize ["modifyvm", :id, "--cpuexecutioncap", "50"]

  # Instruct Vagrant to utilize all the cpu cores we've provided above
  # Without this, only 1 core will be used
  v.customize ["modifyvm", :id, "--ioapic", "on"]

	# Plug in the virtual network adapter as if it were a real cat-5 cable
	# plugged into a real network card. This corrects an error presented with
	# Ubuntu 16 where boot hangs on: "A start job is running for Raise network interfaces"
	# This error occurs because Ubuntu tries to raise all the network interfaces,
	# but the 'cable' isn't connected, so it waits until the timeout.
	# Note, this is the same as selecting 'Cable Connect' for the network adapter
	# in the VirtualBox app settings for this box.
	# https://github.com/hashicorp/vagrant/issues/8056#issuecomment-267600935
	v.customize ["modifyvm", :id, "--cableconnected1", "on"]

	# Turn off un-use devices
	v.customize ["modifyvm", :id, "--usb", "off"]
	v.customize ["modifyvm", :id, "--usbehci", "off"]
	v.customize ["modifyvm", :id, "--usbxhci", "off"]
	v.customize ["modifyvm", :id, "--accelerate3d", "off"]
	v.customize ["modifyvm", :id, "--accelerate2dvideo", "off"]
	v.customize ["modifyvm", :id, "--audio", "none"]
	v.customize ["modifyvm", :id, "--vrde", "off"]

end

# In order to add files to /etc folder, we need to access the privileged script to do the copy
# First we need to add the source to a temporarly folder
config.vm.provision "file",
										before: "pmc-src",
										source: File.join(pmc_src, '.'),
										destination: "/tmp/pmc-src/"
# We then execute a shell script inside VM with admin privilege to copy the files
config.vm.provision "pmc-src", type: 'shell' do |s|
  s.inline = "rsync -r /tmp/pmc-src/ / && rm -rf /tmp/pmc-src"
	s.privileged = true
end

# Implementing PMC specific provision for each site that can't be done by common provision template
$vvv_config['sites'].each do |site, args|
  next if args['skip_provisioning']

	# @TODO: optionally change www folder to our pmc_vvv folder, maybe add a flag to turn on/off
	# args['local_dir'] = File.join(pmc_vvv, 'www', site)
	# $vvv_config['sites'][site]['local_dir'] = args['local_dir']

	# In order to properly develop and test provision script directly on local,
	# we need to override and map the custom-site-template folder
	if Dir.exist?(File.join(pmc_vvv, 'git', 'custom-site-template'))

		# override and disable remote repo since we want use our local template
    $vvv_config['sites'][site]['repo'] = false

		# map the custom provision script directly into the folder so we can develop the scripts without copying between the folders
		config.vm.synced_folder File.join(pmc_vvv, 'git', 'custom-site-template','provision'), '/srv/www/' + site + '/provision', owner: 'vagrant', group: 'www-data', mount_options: ['dmode=775', 'fmode=774'], automount: true, SharedFoldersEnableSymlinksCreate: true
	end

	# VIP GO/Classic
	if args['custom']['wp_vip'] && File.exist?(File.join(pmc_vvv, 'provision', 'provision-bind-mount.sh'))

		# We could let's vagrant auto map the shared folder,
		# however the VVV site provision script doesn't support remote git repo checkout into non-empty folder

    config.vm.provision "bind-mount-#{site}",
												after: "site-#{site}",
												run: 'always',
                        type: 'shell',
                        keep_color: true,
                        path: File.join(pmc_vvv, 'provision', 'provision-bind-mount.sh'),
                        args: [
                          site,
                          args['vm_dir'],
                          args['custom']['wp_vip'],
                          args['custom']['share_code'].to_s
                        ],
                        env: { "VVV_LOG" => "bind-mount-#{site}" }

		# These code would be preferred if VVV site provision script support git repo checkout into non-empty folder
		# These codes are commented out for knowledge sharing and potential future improvement
		<<~END_COMMENT

		if args['custom']['wp_vip'].include? "go"
			# Prepare local folders mapping: wp-content/plugins/pmc-plugins -> pmc-vvv/wp-themes/pmc-plugins, wp-content/themes -> pmc-vvv/wp-themes
			Dir.mkdir( File.join( wp_content_dir, 'plugins'  ) ) unless Dir.exist?( File.join( wp_content_dir, 'plugins'  ) )
			Dir.mkdir( File.join( wp_content_dir, 'plugins', 'pmc-plugins'  ) ) unless Dir.exist?( File.join( wp_content_dir, 'plugins', 'pmc-plugins'  ) )
			config.vm.synced_folder File.join( pmc_vvv, 'wp-themes'  ), '/srv/www/' + site + '/wp-content/themes', owner: 'vagrant', group: 'www-data', mount_options: ['dmode=775', 'fmode=774'], automount: true, SharedFoldersEnableSymlinksCreate: true
			config.vm.synced_folder File.join( pmc_vvv, 'wp-themes/pmc-plugins'  ), '/srv/www/' + site + '/wp-content/plugins/pmc-plugins', owner: 'vagrant', group: 'www-data', mount_options: ['dmode=775', 'fmode=774'], automount: true, SharedFoldersEnableSymlinksCreate: true
		elseif args['custom']['wp_vip'].include? "classic"
			# Prepare local folders mapping: wp-content/themes/vip -> pmc-vvv/wp-themes
			Dir.mkdir( File.join( wp_content_dir, 'themes', 'vip'  ) ) unless Dir.exist?( File.join( wp_content_dir, 'themes', 'vip'  ) )
			config.vm.synced_folder File.join( pmc_vvv, 'wp-themes'  ), '/srv/www/' + site + '/wp-content/themes/vip', owner: 'vagrant', group: 'www-data', mount_options: ['dmode=775', 'fmode=774'], automount: true, SharedFoldersEnableSymlinksCreate: true
		end

		END_COMMENT

	end

end
